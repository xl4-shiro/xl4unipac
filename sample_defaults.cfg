# Defining UNIPAC_PERSISTENT make the 'P' items persistent,
# so that the dynamically changed values are preserved in the next run.
UNIPAC_PERSISTENT "/var/tmp/xl4unipac_sample"[64]
# -2147483648 to 2147483647 uses int32_t
VALUE_A_01 1234	I		# default = 1234 as int32_t, IPC RW
VALUE_A_02 -1234		# default = -1234 as int32_t
VALUE_A_03 2147483647		# default = 2147483647 as int32_t
# beyond -2147483648 to 2147483647 uses int64_t
VALUE_A_04 2147483648		# default = 2147483648 as int64_t
VALUE_A_05 1234L 		# default = 1234 as int64_t
VALUE_A_06 12Y P		# default = 12 as int8_t
VALUE_A_07 1234S		# default = 1232 as int16_t
VALUE_B_01 'a','b','c','\0'	# default = "abc" as 4 arrays of char
VALUE_B_02 "abc"		# "abc" has a space of 4 characters
VALUE_B_03 '\0',' ','X'
VALUE_B_04 [2]"xyz"[6]		# 2 of "xyz" with a space of 6 charcters each
VALUE_C_01 1.234 IR		# default = 1.234 as double, IPC R
VALUE_C_02 1.234F		# default = 1.234 as float
VALUE_D_01 0x24  IWP		# default = 0x24 as uint32_t, IPC W
VALUE_D_02 0x24Y  		# default = 0x24 as uint8_t
VALUE_D_03 0x2456S  		# default = 0x24 as uint16_t
VALUE_D_04 0x2456ABCDL 		# default = 0x24 as uint64_t
VALUE_E_01 0x24,0x56 IRW	# default = {0x24,0x56} as 2 arrays of uint32_t, IPC RW
VALUE_E_02 24:56 I	   	# default = {0x24,0x56} as 2 arrays of uint8_t, IPC RW
VALUE_E_03 24,56	   	# default = {24,56} as 2 arrays of int32_t
VALUE_E_04 [3]{24:56} IR   	# default = 3 array of {0x24,0x56} as uint8_t array
VALUE_E_05 [3]{24,56}	   	# default = 3 arrays of {24,56} as int32_t array
VALUE_E_06 192,168,1,0 I
VALUE_E_07 1a:2b:3c:4d:5e:6f I
VALUE_E_08 {1a:1b:1c:1d:1e:1f},{2a:2b:2c:2d:2e:2f} I
VALUE_E_09 10S,20S

# default = {"ab","cde","fg"}  as 3 arrays of 4 chars
VALUE_F_01 "ab","cde","fg" I
VALUE_F_02 "abc"[5] I	   	# default = "abc" as 5 arrrays of char
VALUE_F_03 "ab"[10],"e"[10] P  	# default = {"ab","e"} as 2 arrays of 10 chars
VALUE_F_04 "abcde fghij"[32]
VALUE_F_05 "abc,\"def\""[32]
VALUE_G_01 true			# default = true as bool
VALUE_G_02 false		# default = false as bool
VALUE_G_03 [3]true		# default = 3 array of true as bool
VALUE_H_01 0,1,2,3		# default = {0,1,2,3} as int32_t array
VALUE_H_02 [4]2    		# default = {2,2,2,2} as int32_t array
VALUE_H_03 [4]0			# default = {0,0,0,0} as int32_t array
VALUE_H_03[0] 10		# default = 10 in index=0
VALUE_H_03[1] 20		# default = 20 in index=1
VALUE_H_03[] 30			# default = 30 in ++index
VALUE_H_03[] 40			# default = 40 in ++index
#define NUMELE1 3 #replace NUMELE1 to 3
#define NUMELE2 2 #replace NUMELE1 to 2
VALUE_I_01 [NUMELE1]{[NUMELE2]0}
VALUE_I_02 [NUMELE1]{[NUMELE2]{00:01:02}}

# the following struct is defined
# typedef struct ABC_01 {
# 	int32_t f0;
# 	char f1[10]; //string9 f1
# 	double f2;
# 	bool f3;
# 	int32_t f4[3];
# 	int32_t f5;
# 	int32_t f6;
# 	int32_t f7;
# 	char f8[3][3]; //string2 f8[3]
# }__attribute__((packed)) ABC_01_t;
ABC_01-VALUE_P {1,"abc"[10],2.3,false,{0,1,2},[3]2,{"x","yy","z"}} # this defines struct ABC_01
ABC_01-VALUE_Q {0,"xy",3.4,} # undefined parts are initialized to ZERO
#define NUMOF_VALUE_R 10 #replace NUMOF_VALUE_R to 10
ABC_01-VALUE_R [NUMOF_VALUE_R]{10,"x",1.0,true,{1,2,3},10,20,30} IP # create 10 elements with this default
ABC_01-VALUE_R[2] {0,"y",2.0,true,{1,2,3},10,20,30} # redefine index=2
ABC_01-VALUE_R[3].f3 false # redefine index=3, f3 filed
ABC_01-VALUE_R[4] {2,"1234",} # redefine index=4, undefined parts are initialized to ZERO
ABC_01-VALUE_Q.f0 1 # define f0 filed
ABC_02:fname NumX,FlagY,StringZ # define field names of ABC_02
ABC_02-VALUE_S [5]{3,true,"pq"[5]} IP # define struct ABC_02, IPC RW
ABC_03-VALUE_T [2]{{0,1,2},0,1}
ABC_02-VALUE_S[4].NumX 4

# the following parts are added at the bottom of the header file
### HEADER ADDITION ###
typedef struct XDEF_01 {
	int32_t x1;
	char x2[10];
	ABC_01_t *x3;
	ABC_02_t *x4;
} XDEF_01_t;
### END HEADER ADDITION ###
